#! %rax = %%rax
#! %rcx = %%rcx
#! %rbp = %%rbp
#! %r8 = %%r8
#! %r9 = %%r9
#! %r10 = %%r10
#! %r11 = %%r11
#! %r12 = %%r12
#! %r13 = %%r13
#! %r14 = %%r14
#! %r15 = %%r15
#! %r8  = %%r8
#! %eax = %%eax
#! (%rdx) = %%EA
#! %rdx = %%rdx
#! 0x8(%rbx) = %%EA
#! 0x10(%rbx) = %%EA
#! 0x18(%rbx) = %%EA
#! %rbx = %%rbx
#! -0x80(%rsi) = %%EA
#! 0x80(%rsi) = %%EA
#! 0x88(%rsi) = %%EA
#! 0x90(%rsi) = %%EA
#! 0x98(%rsi) = %%EA
#! 0x8(%rsi) = %%EA
#! 0x10(%rsi) = %%EA
#! 0x18(%rsi) = %%EA
#! (%rsi) = %%EA
#! %rsi = %%rsi
#! -0x9a8(%rip) = %%EA
#! -0xb93(%rip) = %%EA

#! add $1v, $2v -> bvAddC carry ($2v) (bvVar ($1v)) (bvVar ($2v))
#! add $1c, $2v -> bvAddC carry ($2v) (bvConst (fromPosZ ($1c))) (bvVar ($2v))
#! adc $1v, $2v -> bvAdcC carry ($2v) (bvVar ($1v)) (bvVar ($2v)) (carry)
#! adc $1c, $2v -> bvAdcC carry ($2v) (bvConst (fromPosZ ($1c))) (bvVar ($2v)) (carry)
#! adc \$0x0, $1v -> bvAdc ($1v) (bvVar ($1v)) (bvConst (fromPosZ 0%Z)) (carry)
#! mul $1v -> bvMulf rdx rax (bvVar ($1v)) (bvVar rax)
#! mov $1v, $2v -> bvAssign ($2v) (bvVar ($1v))
#! mov \$0x20, $1v -> bvAssign ($1v) (bvConst (fromPosZ 32%Z))
#! xor $1v, $1v -> bvAssign ($1v) (bvConst (fromPosZ 0%Z));\nbvAssign (carry) (bvConst (fromPosZ 0%Z));\nbvAssign (overflow) (bvConst (fromPosZ 0%Z))
# NOTE: %r14 is always $0x20 for shlx and shrx
#! shlx %%r14, $1v, $2v -> bvShl ($2v) (bvVar ($1v)) (fromNat 32)
#! shrx %%r14, $1v, $2v -> bvSplit ($2v) tmp (bvVar ($1v)) (fromNat 32)
#! mulx $1v, $2v, $3v -> bvMulf ($3v) ($2v) (bvVar ($1v)) (bvVar rdx)
#! addr32 mulx $1v, $2v, $3v -> bvMulf ($3v) ($2v) (bvVar ($1v)) (bvVar rdx)
#! addr32 addr32 mulx $1v, $2v, $3v -> bvMulf ($3v) ($2v) (bvVar ($1v)) (bvVar rdx)
#! adcx $1v, $2v -> bvAdcC carry ($2v) (bvVar ($1v)) (bvVar ($2v)) (carry)
#! adox $1v, $2v -> bvAdcC overflow ($2v) (bvVar ($1v)) (bvVar ($2v)) (overflow)

#ecp_nistz256_mul_mont:
# %rdi = 0x7fffffffd6d0
# %rsi = 0x62c080
# %rdx = 0x62c0a0
# %rcx = 0x0
# %r8  = 0x0
# %r9  = 0x-5cdfd00000000
#	mov    $0x80100,%ecx
#	and    0x204c49(%rip),%ecx        # 0x62c0d4 <OPENSSL_ia32cap_P+8>#! EA = L0x62c0d4
#	push   %rbp
#	push   %rbx
#	push   %r12
#	push   %r13
#	push   %r14
#	push   %r15
#	cmp    $0x80100,%ecx
#	#je     0x4274c0 <ecp_nistz256_mul_mont+64>
#	mov    %rdx,%rbx
	mov    (%rdx),%rdx                              #! EA = L0x62c0a0
	mov    (%rsi),%r9                               #! EA = L0x62c080
	mov    0x8(%rsi),%r10                           #! EA = L0x62c088
	mov    0x10(%rsi),%r11                          #! EA = L0x62c090
	mov    0x18(%rsi),%r12                          #! EA = L0x62c098
#	lea    -0x80(%rsi),%rsi                         #! EA = L0x62c000
#	#callq  0x4279a0 <__ecp_nistz256_mul_montx>
	mulx   %r9,%r8,%r9
	mulx   %r10,%rcx,%r10
	mov    $0x20,%r14
	xor    %r13,%r13
	mulx   %r11,%rbp,%r11
	mov    -0x9a8(%rip),%r15        # 0x427018      #! EA = L0x427018
	adc    %rcx,%r9
	mulx   %r12,%rcx,%r12
	mov    %r8,%rdx
	adc    %rbp,%r10
	shlx   %r14,%r8,%rbp
	adc    %rcx,%r11
	shrx   %r14,%r8,%rcx
	adc    $0x0,%r12
	add    %rbp,%r9
	adc    %rcx,%r10
	mulx   %r15,%rcx,%rbp
	mov    0x8(%rbx),%rdx                           #! EA = L0x62c0a8
	adc    %rcx,%r11
	adc    %rbp,%r12
	adc    $0x0,%r13
	xor    %r8,%r8
	mulx   0x80(%rsi),%rcx,%rbp                     #! EA = L0x62c080
	adcx   %rcx,%r9
	adox   %rbp,%r10
	mulx   0x88(%rsi),%rcx,%rbp                     #! EA = L0x62c088
	adcx   %rcx,%r10
	adox   %rbp,%r11
	mulx   0x90(%rsi),%rcx,%rbp                     #! EA = L0x62c090
	adcx   %rcx,%r11
	adox   %rbp,%r12
	mulx   0x98(%rsi),%rcx,%rbp                     #! EA = L0x62c098
	mov    %r9,%rdx
	adcx   %rcx,%r12
	shlx   %r14,%r9,%rcx
	adox   %rbp,%r13
	shrx   %r14,%r9,%rbp
	adcx   %r8,%r13
	adox   %r8,%r8
	adc    $0x0,%r8
	add    %rcx,%r10
	adc    %rbp,%r11
	mulx   %r15,%rcx,%rbp
	mov    0x10(%rbx),%rdx                          #! EA = L0x62c0b0
	adc    %rcx,%r12
	adc    %rbp,%r13
	adc    $0x0,%r8
	xor    %r9,%r9
	mulx   0x80(%rsi),%rcx,%rbp                     #! EA = L0x62c080
	adcx   %rcx,%r10
	adox   %rbp,%r11
	mulx   0x88(%rsi),%rcx,%rbp                     #! EA = L0x62c088
	adcx   %rcx,%r11
	adox   %rbp,%r12
	mulx   0x90(%rsi),%rcx,%rbp                     #! EA = L0x62c090
	adcx   %rcx,%r12
	adox   %rbp,%r13
	mulx   0x98(%rsi),%rcx,%rbp                     #! EA = L0x62c098
	mov    %r10,%rdx
	adcx   %rcx,%r13
	shlx   %r14,%r10,%rcx
	adox   %rbp,%r8
	shrx   %r14,%r10,%rbp
	adcx   %r9,%r8
	adox   %r9,%r9
	adc    $0x0,%r9
	add    %rcx,%r11
	adc    %rbp,%r12
	mulx   %r15,%rcx,%rbp
	mov    0x18(%rbx),%rdx                          #! EA = L0x62c0b8
	adc    %rcx,%r13
	adc    %rbp,%r8
	adc    $0x0,%r9
	xor    %r10,%r10
	mulx   0x80(%rsi),%rcx,%rbp                     #! EA = L0x62c080
	adcx   %rcx,%r11
	adox   %rbp,%r12
	mulx   0x88(%rsi),%rcx,%rbp                     #! EA = L0x62c088
	adcx   %rcx,%r12
	adox   %rbp,%r13
	mulx   0x90(%rsi),%rcx,%rbp                     #! EA = L0x62c090
	adcx   %rcx,%r13
	adox   %rbp,%r8
	mulx   0x98(%rsi),%rcx,%rbp                     #! EA = L0x62c098
	mov    %r11,%rdx
	adcx   %rcx,%r8
	shlx   %r14,%r11,%rcx
	adox   %rbp,%r9
	shrx   %r14,%r11,%rbp
	adcx   %r10,%r9
	adox   %r10,%r10
	adc    $0x0,%r10
	add    %rcx,%r12
	adc    %rbp,%r13
	mulx   %r15,%rcx,%rbp
	mov    %r12,%rbx
	mov    -0xb93(%rip),%r14        # 0x427008      #! EA = L0x427008
	adc    %rcx,%r8
	mov    %r13,%rdx
	adc    %rbp,%r9
	adc    $0x0,%r10
#	xor    %eax,%eax
#	mov    %r8,%rcx
#	sbb    $0xffffffffffffffff,%r12
#	sbb    %r14,%r13
#	sbb    $0x0,%r8
#	mov    %r9,%rbp
#	sbb    %r15,%r9
#	sbb    $0x0,%r10
#	cmovb  %rbx,%r12
#	cmovb  %rdx,%r13
#	mov    %r12,(%rdi)                              #! EA = L0x7fffffffd6d0
#	cmovb  %rcx,%r8
#	mov    %r13,0x8(%rdi)                           #! EA = L0x7fffffffd6d8
#	cmovb  %rbp,%r9
#	mov    %r8,0x10(%rdi)                           #! EA = L0x7fffffffd6e0
#	mov    %r9,0x18(%rdi)                           #! EA = L0x7fffffffd6e8
#	#repz retq 
#	mov    (%rsp),%r15                              #! EA = L0x7fffffffd698
#	mov    0x8(%rsp),%r14                           #! EA = L0x7fffffffd6a0
#	mov    0x10(%rsp),%r13                          #! EA = L0x7fffffffd6a8
#	mov    0x18(%rsp),%r12                          #! EA = L0x7fffffffd6b0
#	mov    0x20(%rsp),%rbx                          #! EA = L0x7fffffffd6b8
#	mov    0x28(%rsp),%rbp                          #! EA = L0x7fffffffd6c0
#	lea    0x30(%rsp),%rsp                          #! EA = L0x7fffffffd6c8
#	#repz retq 
